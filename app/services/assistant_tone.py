from __future__ import annotations
from dataclasses import dataclass

__all__ = [
    "MissionBrief",
    "line_created",
    "line_sent_to_assignee",
    "line_assignee_prompt",
    "line_accepted",
    "line_declined",
    "line_postponed",
    "line_done",
    "line_rework",
    "line_deleted_penalty",
    "line_deleted_no_penalty",
]

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Helpers ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

def _safe_str(v: object, default: str = "‚Äî") -> str:
    s = "" if v is None else str(v).strip()
    return s if s else default

def _safe_int(v: object, default: int = 0) -> int:
    try:
        return int(v)  # –º–æ–∂–µ—Ç –±—ã—Ç—å bool, str, None
    except Exception:
        return default

def _fmt_name(name: str | None) -> str:
    return _safe_str(name)

def _fmt_deadline(deadline_str: str | None) -> str:
    # –æ–∂–∏–¥–∞–µ–º —É–∂–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞ "12.09 20:00"
    return _safe_str(deadline_str)

def _fmt_points(points: int | None) -> int:
    return abs(_safe_int(points, 0))

def _fmt_penalty(points: int | None) -> int:
    return abs(_safe_int(points, 0))

def _plural_days_ru(n: int) -> str:
    # 1 –¥–µ–Ω—å, 2/3/4 –¥–Ω—è, 5+ –¥–Ω–µ–π
    n = abs(int(n))
    if 11 <= (n % 100) <= 14:
        return "–¥–Ω–µ–π"
    tail = n % 10
    if tail == 1:
        return "–¥–µ–Ω—å"
    if 2 <= tail <= 4:
        return "–¥–Ω—è"
    return "–¥–Ω–µ–π"

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Data ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

@dataclass
class MissionBrief:
    title: str
    description: str
    assignee_name: str          # –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è/–Ω–∏–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    deadline_str: str           # —É–∂–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–µ–¥–ª–∞–π–Ω, –Ω–∞–ø—Ä. "12.09 20:00"
    reward_points: int          # —Å–∫–æ–ª—å–∫–æ –∫–∞—Ä–º—ã –∑–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é
    difficulty: int             # 1..5

# ‚îÄ‚îÄ –°–æ–∑–¥–∞–Ω–∏–µ / —Ä–∞—Å—Å—ã–ª–∫–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

def line_created(brief: MissionBrief) -> str:
    title = _safe_str(brief.title)
    desc = _safe_str(brief.description)
    who = _fmt_name(brief.assignee_name)
    deadline = _fmt_deadline(brief.deadline_str)
    reward = _fmt_points(brief.reward_points)
    diff = _safe_int(brief.difficulty, 1)

    return (
        f"üèÅ –ú–∏—Å—Å–∏—è —Å–æ–±—Ä–∞–Ω–∞: {title}\n"
        f"{desc}\n"
        f"üë§ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {who}\n"
        f"‚è∞ –î–µ–¥–ª–∞–π–Ω: {deadline}\n"
        f"üèÖ –ù–∞–≥—Ä–∞–¥–∞: +{reward} (—Å–ª–æ–∂–Ω. {diff}/5)\n\n"
        f"–î–≤–∏–≥–∞–µ–º –ø–æ-OG: –æ—Ç–ø—Ä–∞–≤–ª—è—é –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é."
    )

def line_sent_to_assignee(brief: MissionBrief) -> str:
    who = _fmt_name(brief.assignee_name)
    deadline = _fmt_deadline(brief.deadline_str)
    reward = _fmt_points(brief.reward_points)
    desc = _safe_str(brief.description)

    return (
        f"üì® –ú–∏—Å—Å–∏—è —É—à–ª–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ: {who}\n"
        f"‚è∞ –î–µ–¥–ª–∞–π–Ω: {deadline} ¬∑ üèÖ –ù–∞–≥—Ä–∞–¥–∞: +{reward}\n"
        f"üìù –ö—Ä–∞—Ç–∫–æ: {desc}"
    )

def line_assignee_prompt(brief: MissionBrief) -> str:
    who = _fmt_name(brief.assignee_name)
    title = _safe_str(brief.title)
    desc = _safe_str(brief.description)
    deadline = _fmt_deadline(brief.deadline_str)
    reward = _fmt_points(brief.reward_points)
    diff = _safe_int(brief.difficulty, 1)

    return (
        f"–ô–æ, {who}! –ö–≤–µ—Å—Ç: {title}\n"
        f"{desc}\n"
        f"‚è∞ –î–µ–¥–ª–∞–π–Ω: {deadline}\n"
        f"üèÖ –ó–∞ —Å–¥–∞—á—É: +{reward} (—Å–ª–æ–∂–Ω. {diff}/5)\n\n"
        f"–ñ–º—ë—à—å: ‚úÖ –ü—Ä–∏–Ω—è—Ç—å ¬∑ ‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è ¬∑ ‚è≥ –ü–µ—Ä–µ–Ω–µ—Å—Ç–∏"
    )

# ‚îÄ‚îÄ –û—Ç–≤–µ—Ç –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

def line_accepted(user_name: str) -> str:
    who = _fmt_name(user_name)
    return f"‚úÖ {who} –≤ –¥–µ–ª–µ. –ü–æ–≥–Ω–∞–ª–∏."

def line_declined(user_name: str, penalty: int) -> str:
    who = _fmt_name(user_name)
    pen = _fmt_penalty(penalty)
    tail = f" (‚àí{pen} –∫–∞—Ä–º—ã)" if pen else ""
    return f"‚ùå {who} –æ—Ç–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è{tail}. –ë–µ—Ä—ë–º –¥—Ä—É–≥–æ–≥–æ."

def line_postponed(user_name: str, days: int, penalty: int) -> str:
    who = _fmt_name(user_name)
    d = _safe_int(days, 1)
    pen = _fmt_penalty(penalty)
    day_word = _plural_days_ru(d)
    tail = f" (‚àí{pen} –∫–∞—Ä–º—ã)" if pen else ""
    return f"‚è≥ {who} –ø–µ—Ä–µ–Ω—ë—Å –Ω–∞ {d} {day_word}.{tail}"

# ‚îÄ‚îÄ –†–µ–≤—å—é / —Ñ–∏–Ω–∞–ª ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

def line_done(user_name: str, points: int) -> str:
    who = _fmt_name(user_name)
    pts = _fmt_points(points)
    return f"üèÜ {who} –∑–∞–∫—Ä—ã–ª –º–∏—Å—Å–∏—é. +{pts} –∫ –∫–∞—Ä–º–µ. –†–µ—Å–ø–µ–∫—Ç."

def line_rework(user_name: str, penalty: int) -> str:
    who = _fmt_name(user_name)
    pen = _fmt_penalty(penalty)
    tail = f" ‚àí{pen} –∫ –∫–∞—Ä–º–µ" if pen else ""
    return f"üîÅ {who}, –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É.{tail} –ü–æ–¥—Ç—è–≥–∏–≤–∞–π –¥–µ—Ç–∞–ª–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π."

# ‚îÄ‚îÄ –ê–¥–º–∏–Ω—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ

def line_deleted_penalty(mission_id: int, user_name: str | None, penalty: int) -> str:
    who = f" –¥–ª—è {_fmt_name(user_name)}" if user_name else ""
    pen = _fmt_penalty(penalty)
    tail = f" ‚àí{pen} –∫ –∫–∞—Ä–º–µ" if pen else ""
    mid = _safe_int(mission_id, 0)
    return f"üóë –ú–∏—Å—Å–∏—è #{mid} —É–¥–∞–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–æ–º{who}.{tail}"

def line_deleted_no_penalty(mission_id: int) -> str:
    mid = _safe_int(mission_id, 0)
    return f"‚ôªÔ∏è –ú–∏—Å—Å–∏—è #{mid} —É–¥–∞–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–æ–º –±–µ–∑ —à—Ç—Ä–∞—Ñ–∞."
